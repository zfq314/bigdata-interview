1、 拍摄技巧学习
	抠图
	
2、 大数据复习
	数据分析:
		python
		execl
		sql
		
	元数据管理:
	数仓建模:
	实时流处理: 
	flinkcdc: 
	clickhouse:
		Clickhouse是一个用于在线分析处理（OLAP）的列式数据库管理系统（DBMS）。
		优点：
		为了高效的使用CPU，数据不仅仅按列存储，同时还按向量进行处理；数据压缩空间大，减少IO；处理单查询高吞吐量每台服务器每秒最多数十亿行；索引非B树结构，不需要满足最左原则；只要过滤条件在索引列中包含即可；即使在使用的数据不在索引中，由于各种并行处理机制ClickHouse全表扫描的速度也很快；写入速度非常快，50-200M/s，对于大量的数据更新非常适用。很强的单表查询性能，适合基于大宽表的OLAP多维分析查询。包含丰富的MergeTreeFamily，支持预聚合。非常适合大规模日志明细数据写入分析。
		缺点：
			不支持真正的删除/更新支持 不支持事务不支持二级索引有限的SQL支持，join实现与众不同不支持窗口功能元数据管理需要人工干预维护，运维起来比较麻烦。多表join效率性能比较低不支持高并发，官方建议qps为100，可以通过修改config.xml的max_concurrent_queries配置。建议1000条以上批量的写入，不建议单条记录修改和删除。
		适用场景：
		第一，用户行为分析。ClickHouse将用户行为分析表制作成一张大的宽表，减少join的形式，实现路径分析、漏斗分析、路径转化等功能。除此之外，它还能支撑广告，营销和AB实验。
		第二，实时BI报表。ClickHouse可以根据业务需求，实时制作及时产出，查询灵活的BI报表，包括订单分析，营销效果分析，大促活动分析等等。
		第三，监控。ClickHouse可以将系统和应用监控指标通过流式计算引擎Flink,Spark streaming清洗处理以后，实时写入ClickHouse。结合Grafna进行可视化展示。
		第四，用户画像。ClickHouse可以对各种用户特征进行数据加工，制作成包含全部用户的一张或多张用户特征表，提供灵活的用户画像分析，支撑广告，圈人等业务需求等等。

	starrocks:
		StarRocks 是新一代极速全场景MPP数据库。StarRocks 的架构简洁，采用了全面向量化引擎，并配备全新设计的 CBO 优化器，查询速度快。
		StarRocks 能很好地支持实时数据分析，并能实现对实时更新数据的高效查询。StarRocks 还支持现代化物化视图，以进一步加速查询。
		使用 StarRocks，用户可以灵活构建包括大宽表、星型模型、雪花模型在内的各类模型。
		StarRocks 兼容 MySQL 协议，支持标准 SQL 语法，易于对接使用，全系统无外部依赖，高可用，易于运维管理。

		优点：
		单表查询和多表查询性能都很强，可以同时较好支持宽表查询场景和复杂多表查询。
		支持高并发查询。
		支持实时数据微批ETL处理。
		流式和批量数据写入都能都比较强。
		兼容MySQL协议和标准SQL。
		能够保证数据的exactly-once
		支持多种分布式Join方式，支持多种数据模型
		架构简单，易于维护，无侵入式弹性伸缩与扩容

		缺点：
		大规模ETL能力不足。
		资源隔离还不完善。
		数据全内存计算，对内存要求较高。
		适用场景：
		StarRocks 可以满足企业级用户的多种分析需求，包括 OLAP 多维分析、定制报表、实时数据分析和 Ad-hoc 数据分析等。



	doris:

		Apache Doris 是一款由百度开源的高性能MPP数据库。支持实时数据分析；分布式架构简洁，易于运维，可以支持10PB以上的超大数据集；可以满足多种数据分析需求，例如固定历史报表，实时数据分析，交互式数据分析和探索式数据分析等。

		优点：
		使用更简单，如建表更简单，SQL标准支持更好， Join性能更好，导数功能更强大
		运维更简单，如灵活的扩缩容能力，故障节点自动恢复，社区提供的支持更好
		分布式更强，支持事务和幂等性导数，物化视图自动聚合，查询自动路由，全面元数据管理
		流式和批量数据写入都能都比较强。
		 
		缺点：
		大规模ETL能力不足。
		资源隔离还不完善，不支持容器化部署。
		数据全内存计算，对内存要求较高。

		数据湖：
			Databricks 最近开发了一个类似的功能，他们称之为Change Data Feed，他们一直持有该功能，直到最终在 Delta Lake 2.0 中开源。Iceberg 有增量读取，但它只允许您读取增量附加，没有更新/删除，这对于真正的变更数据捕获和事务数据至关重要。

			Apache Iceberg 经常强调的一个特性是隐藏分区，它解锁了所谓的分区演化。基本思想是当您的数据开始演变，或者您只是没有从当前分区方案中获得所需的性能价值时，分区演变允许您更新分区以获取新数据而无需重写数据。当你进化你的分区时，旧数据会留在旧的分区方案中，只有新数据会随着你的进化而分区。如果用户不了解演化历史，则以多种方式分区的表会将复杂性推给用户，并且无法保证一致的性能。

			在最近的版本中，Apache Hudi 为 Lakehouse 创建了首创的高性能索引子系统，我们称之为Hudi 多模式索引。Apache Hudi 提供了一种异步索引机制，允许您在不影响写入延迟的情况下构建和更改索引。这种索引机制具有可扩展性和可扩展性，可以支持任何流行的索引技术，例如 Bloom、Hash、Bitmap、R-tree 等。
			这些索引存储在Hudi 元数据表中，该表存储在数据旁边的云存储中。在这个新版本中，元数据以优化的索引文件格式编写，与 Delta 或 Iceberg 通用文件格式相比，点查找的性能提高了 10-100 倍。在测试真实世界的工作负载时，这个新的索引子系统可将整体查询性能提高 10-30 倍

		Flink CDC vs Debezium：
			Flink CDC更灵活，支持DataStream API和SQL两种方式同步数据，便于对数据做⼀些ETL,
			Flink CDC分布式架构不仅仅体现在数据读取能⼒的⽔平扩展上，更重要的是在⼤数据场景下分布式系统接⼊能⼒。例如 Flink CDC 的数据⼊湖或者⼊仓的时候，下游通常 是分布式的系统，如 Hive、HDFS、Iceberg、Hudi 等。另外，在⽣态⽅⾯，这⾥指的是下游的⼀些数据库或者数据源的⽀持。Flink CDC 下游有丰富的 Connector，例如写⼊到 TiDB、MySQL、Pg、HBase、Kafka、ClickHouse 等常⻅的⼀些系统，也⽀持各种⾃定义 connector。
			但是 DataX、Debezium 等则需要通过脚本或者模板去做，所以⽤户的使⽤⻔槛会⽐较⾼

		数据建模：
			建模工具：	


3、 java复习
4、 20220919晚上刷鞋

./mysqlbinlog --no-defaults --base64-output=decode-rows -v -v mysql-bin.000158 mysql-bin.000158 mysql-bin.000158 | awk '/###/ {if($0~/UPDATE|INSERT|SELECT/)count[$2" "$NF]++}END{for(i in count) print i,"\t",count[i]}' | column -t | sort -k3nr