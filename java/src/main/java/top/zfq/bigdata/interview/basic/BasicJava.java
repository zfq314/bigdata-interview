package top.zfq.bigdata.interview.basic;

/**
 * @ClassName HelloWorld
 * @Description TODO
 * @Author ZFQ
 * @Date 2023/5/18 14:12
 * @Version 1.0
 */
public class BasicJava {
    public static void main(String[] args) {
        System.out.println("HelloWorld");
        //命名规范 驼峰命名
        //类
        // 1. 通常是见名知意的名词。
        //2. 首字母大写。
        //3. 多个单词时，采用驼峰命名法。
        //4. 不建议使用中文缩写来命名。

        //包
        //1. 使用小写英文字母进行命名。
        //2. 多层包之间用点进行分隔。
        //3. 一般采用域名倒写的方式进行命名。

        //抽象类
        //1. 符合类名的命名规范即可。
        //2. 为了和接口做出区别，一般以“Abstract”或“Base”作为前缀。

        //异常类
        //1. 符合类名的命名规范即可。
        //2. 为了和普通类做出区别，一般以“Exceptiont”作为后缀。

        // 方法
        //1. 通常是见名知意的名词。
        //2. 首字母小写。
        //3. 多个单词时，采用驼峰命名法。
        //4. 不建议使用中文缩写来命名。
        //5. 不建议使用下划线作为连接。
        //6. 有返回值的方法一般加“get”前缀。
        //7. 设置的方法一般加对应的动词作为前缀（如：set、insert、update、delete）。
        //8. 查询的方法一般加“select”或“find”或“query”作为前缀。
        //9. 带有条件的方法一般在命名中使用“by”或“with”等字符。
        //10. 判断的方法一般以“is”作为前缀。
        //11. 测试方法一般以“test”作为前缀

        // 变量-命名规范
        //1. 通常是见名知意的名词。
        //2. 首字母小写。
        //3. 多个单词时，采用驼峰命名法。
        //4. 不建议使用中文缩写来命名。
        //5. 不建议使用下划线作为连

        //常量-命名规范
        //1. 通常是见名知意的名词。
        // 2. 全部大写字母。
        // 3. 多个单词之间使用“_”进行分隔。
        //4. 不建议使用中文缩写来命名

        //枚举类（Enum）-命名规范

        //1.枚举类遵循普通类的命名规范。
        //2. 枚举类中的值遵循常量的命名规范。
        //3. 枚举值名称需要和类有关联性
    }
}